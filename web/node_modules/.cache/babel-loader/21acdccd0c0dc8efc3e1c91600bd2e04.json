{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srouco\\\\Downloads\\\\Personal\\\\htdocs\\\\aaludica.com.ar\\\\web\\\\src\\\\pages\\\\AdmProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { Editors } from \"react-data-grid-addons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageAdmProducts = () => {\n  _s();\n\n  const columns = [{\n    key: \"name\",\n    name: \"Nombre\"\n  }, {\n    key: \"price\",\n    name: \"Precio\",\n    editable: true\n  }, {\n    key: \"is_active\",\n    name: \"Activo\",\n    editable: true\n  }];\n  const [rows, setRows] = useState([]);\n  const {\n    CheckboxEditor\n  } = Editors;\n\n  const IssueTypeEditor = /*#__PURE__*/_jsxDEV(DropDownEditor, {\n    options: issueTypes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 27\n  }, this);\n\n  const handleGridRowsUpdated = ({\n    fromRow,\n    toRow,\n    updated\n  }) => {\n    this.setState(rows => {\n      for (let i = fromRow; i <= toRow; i++) {\n        rows[i] = { ...rows[i],\n          ...updated\n        };\n      }\n\n      return {\n        rows\n      };\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://localhost:8000/api/products\");\n      const results = await response.json();\n      setRows(results);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"CatalogPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Edici\\xF3n R\\xE1pida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(ReactDataGrid, {\n        columns: columns,\n        rowGetter: i => rows[i],\n        rowsCount: 10,\n        minHeight: 150,\n        handleGridRowsUpdated: handleGridRowsUpdated,\n        enableCellSelect: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PageAdmProducts, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = PageAdmProducts;\nexport default PageAdmProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageAdmProducts\");","map":{"version":3,"sources":["C:/Users/srouco/Downloads/Personal/htdocs/aaludica.com.ar/web/src/pages/AdmProducts.js"],"names":["React","useState","useEffect","ReactDataGrid","Editors","PageAdmProducts","columns","key","name","editable","rows","setRows","CheckboxEditor","IssueTypeEditor","issueTypes","handleGridRowsUpdated","fromRow","toRow","updated","setState","i","response","fetch","results","json"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,GAAG,EAAE,MAAP;AAAeC,IAAAA,IAAI,EAAE;AAArB,GADc,EAEd;AAAED,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,IAAI,EAAE,QAAtB;AAAgCC,IAAAA,QAAQ,EAAE;AAA1C,GAFc,EAGd;AAAEF,IAAAA,GAAG,EAAE,WAAP;AAAoBC,IAAAA,IAAI,EAAE,QAA1B;AAAoCC,IAAAA,QAAQ,EAAE;AAA9C,GAHc,CAAhB;AAMA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAqBR,OAA3B;;AACA,QAAMS,eAAe,gBAAG,QAAC,cAAD;AAAgB,IAAA,OAAO,EAAEC;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAxB;;AAEA,QAAMC,qBAAqB,GAAG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAAiC;AAC7D,SAAKC,QAAL,CAAeT,IAAD,IAAU;AACtB,WAAK,IAAIU,CAAC,GAAGJ,OAAb,EAAsBI,CAAC,IAAIH,KAA3B,EAAkCG,CAAC,EAAnC,EAAuC;AACrCV,QAAAA,IAAI,CAACU,CAAD,CAAJ,GAAU,EAAE,GAAGV,IAAI,CAACU,CAAD,CAAT;AAAc,aAAGF;AAAjB,SAAV;AACD;;AACD,aAAO;AAAER,QAAAA;AAAF,OAAP;AACD,KALD;AAMD,GAPD;;AASAR,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,YAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,YAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAtB;AACAb,MAAAA,OAAO,CAACY,OAAD,CAAP;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,EAAE,EAAC,aAA9B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,OAAO,EAAEjB,OADX;AAEE,QAAA,SAAS,EAAGc,CAAD,IAAOV,IAAI,CAACU,CAAD,CAFxB;AAGE,QAAA,SAAS,EAAE,EAHb;AAIE,QAAA,SAAS,EAAE,GAJb;AAKE,QAAA,qBAAqB,EAAEL,qBALzB;AAME,QAAA,gBAAgB,EAAE;AANpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAjDD;;GAAMV,e;;KAAAA,e;AAmDN,eAAeA,eAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport { Editors } from \"react-data-grid-addons\";\r\n\r\nconst PageAdmProducts = () => {\r\n  const columns = [\r\n    { key: \"name\", name: \"Nombre\" },\r\n    { key: \"price\", name: \"Precio\", editable: true },\r\n    { key: \"is_active\", name: \"Activo\", editable: true },\r\n  ];\r\n\r\n  const [rows, setRows] = useState([]);\r\n  const { CheckboxEditor } = Editors;\r\n  const IssueTypeEditor = <DropDownEditor options={issueTypes} />;\r\n\r\n  const handleGridRowsUpdated = ({ fromRow, toRow, updated }) => {\r\n    this.setState((rows) => {\r\n      for (let i = fromRow; i <= toRow; i++) {\r\n        rows[i] = { ...rows[i], ...updated };\r\n      }\r\n      return { rows };\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://localhost:8000/api/products\");\r\n      const results = await response.json();\r\n      setRows(results);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\" id=\"CatalogPage\">\r\n      <div className=\"row\">\r\n        <div className=\"\">\r\n          <div className=\"section-title\">\r\n            <h4>Edición Rápida</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <ReactDataGrid\r\n          columns={columns}\r\n          rowGetter={(i) => rows[i]}\r\n          rowsCount={10}\r\n          minHeight={150}\r\n          handleGridRowsUpdated={handleGridRowsUpdated}\r\n          enableCellSelect={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageAdmProducts;\r\n"]},"metadata":{},"sourceType":"module"}