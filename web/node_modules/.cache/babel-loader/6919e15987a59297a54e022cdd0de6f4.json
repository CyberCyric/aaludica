{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srouco\\\\Downloads\\\\Personal\\\\htdocs\\\\aaludica.com.ar\\\\web\\\\src\\\\components\\\\AdmProductGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTable, usePagination } from \"react-table\";\n/******  Editable Cell Component *****/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditableCell = ({\n  value: initialValue,\n  row: {\n    index\n  },\n  column: {\n    id\n  },\n  updateMyData // This is a custom function that we supplied to our table instance\n\n}) => {\n  _s();\n\n  // We need to keep and update the state of the cell normally\n  const [value, setValue] = React.useState(initialValue);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  }; // We'll only update the external data when the input is blurred\n\n\n  const onBlur = () => {\n    updateMyData(index, id, value);\n  }; // If the initialValue is changed external, sync it up with our state\n\n\n  React.useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\n_s(EditableCell, \"tWiMN+R1KrlPc+I/v9D+hnPBFtc=\");\n\n_c = EditableCell;\n\nfunction AdmProductGrid() {}\n\n_c2 = AdmProductGrid;\nexport default AdmProductGrid;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"AdmProductGrid\");","map":{"version":3,"sources":["C:/Users/srouco/Downloads/Personal/htdocs/aaludica.com.ar/web/src/components/AdmProductGrid.js"],"names":["React","useTable","usePagination","EditableCell","value","initialValue","row","index","column","id","updateMyData","setValue","useState","onChange","e","target","onBlur","useEffect","AdmProductGrid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,aAAxC;AAEA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA,KAAK,EAAEC,YADa;AAEpBC,EAAAA,GAAG,EAAE;AAAEC,IAAAA;AAAF,GAFe;AAGpBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF,GAHY;AAIpBC,EAAAA,YAJoB,CAIN;;AAJM,CAAD,KAKf;AAAA;;AACJ;AACA,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeP,YAAf,CAA1B;;AAEA,QAAMQ,QAAQ,GAAIC,CAAD,IAAO;AACtBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASX,KAAV,CAAR;AACD,GAFD,CAJI,CAQJ;;;AACA,QAAMY,MAAM,GAAG,MAAM;AACnBN,IAAAA,YAAY,CAACH,KAAD,EAAQE,EAAR,EAAYL,KAAZ,CAAZ;AACD,GAFD,CATI,CAaJ;;;AACAJ,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,QAAQ,CAACN,YAAD,CAAR;AACD,GAFD,EAEG,CAACA,YAAD,CAFH;AAIA,sBAAO;AAAO,IAAA,KAAK,EAAED,KAAd;AAAqB,IAAA,QAAQ,EAAES,QAA/B;AAAyC,IAAA,MAAM,EAAEG;AAAjD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;GAAMb,Y;;KAAAA,Y;;AA0BN,SAASe,cAAT,GAA0B,CAAE;;MAAnBA,c;AAET,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\n\r\n/******  Editable Cell Component *****/\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue);\r\n\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value);\r\n  };\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue);\r\n  }, [initialValue]);\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} />;\r\n};\r\n\r\nfunction AdmProductGrid() {}\r\n\r\nexport default AdmProductGrid;\r\n"]},"metadata":{},"sourceType":"module"}