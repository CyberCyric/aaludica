{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srouco\\\\Downloads\\\\Personal\\\\htdocs\\\\aaludica.com.ar\\\\web\\\\src\\\\pages\\\\AdmProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  key: \"id\",\n  name: \"ID\"\n}, {\n  key: \"title\",\n  name: \"Title\"\n}, {\n  key: \"count\",\n  name: \"Count\"\n}];\nconst rows = [{\n  id: 0,\n  title: \"row1\",\n  count: 20\n}, {\n  id: 1,\n  title: \"row1\",\n  count: 40\n}, {\n  id: 2,\n  title: \"row1\",\n  count: 60\n}];\n\nconst PageAdmProducts = () => {\n  _s();\n\n  const initColumns = React.useMemo(() => [{\n    Header: \"Productos\",\n    columns: [{\n      Header: \"Nombre\",\n      accessor: \"name\"\n    }, {\n      Header: \"Precio\",\n      accessor: \"price\"\n    }, {\n      Header: \"Activo\",\n      accessor: \"is_active\"\n    }]\n  }], []);\n  const [columns, setColumns] = useState(initColumns);\n  const [data, setData] = useState([]);\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    // We also turn on the flag to not reset the page\n    setSkipPageReset(true);\n    setData(old => old.map((row, index) => {\n      if (index === rowIndex) {\n        return { ...old[rowIndex],\n          [columnId]: value\n        };\n      }\n\n      return row;\n    }));\n  };\n\n  useEffect(() => {\n    (async () => {\n      const response = await fetch(\"http://localhost:8000/api/products\");\n      const data = await response.json();\n      setData(data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"CatalogPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-12 col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-title\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Administrar Productos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(AdmProductGrid, {\n        columns: columns,\n        data: data,\n        updateMyData: updateMyData,\n        skipPageReset: skipPageReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PageAdmProducts, \"zbDarny52gUwRwBiOUG+NzhCGJM=\");\n\n_c = PageAdmProducts;\nexport default PageAdmProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageAdmProducts\");","map":{"version":3,"sources":["C:/Users/srouco/Downloads/Personal/htdocs/aaludica.com.ar/web/src/pages/AdmProducts.js"],"names":["React","useEffect","useState","columns","key","name","rows","id","title","count","PageAdmProducts","initColumns","useMemo","Header","accessor","setColumns","data","setData","skipPageReset","setSkipPageReset","updateMyData","rowIndex","columnId","value","old","map","row","index","response","fetch","json"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst columns = [\r\n  { key: \"id\", name: \"ID\" },\r\n  { key: \"title\", name: \"Title\" },\r\n  { key: \"count\", name: \"Count\" },\r\n];\r\n\r\nconst rows = [\r\n  { id: 0, title: \"row1\", count: 20 },\r\n  { id: 1, title: \"row1\", count: 40 },\r\n  { id: 2, title: \"row1\", count: 60 },\r\n];\r\n\r\nconst PageAdmProducts = () => {\r\n  const initColumns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Productos\",\r\n        columns: [\r\n          {\r\n            Header: \"Nombre\",\r\n            accessor: \"name\",\r\n          },\r\n          {\r\n            Header: \"Precio\",\r\n            accessor: \"price\",\r\n          },\r\n          {\r\n            Header: \"Activo\",\r\n            accessor: \"is_active\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const [columns, setColumns] = useState(initColumns);\r\n  const [data, setData] = useState([]);\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false);\r\n\r\n  const updateMyData = (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    setSkipPageReset(true);\r\n    setData((old) =>\r\n      old.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...old[rowIndex],\r\n            [columnId]: value,\r\n          };\r\n        }\r\n        return row;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const response = await fetch(\"http://localhost:8000/api/products\");\r\n      const data = await response.json();\r\n      setData(data);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\" id=\"CatalogPage\">\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-12 col-md-12\">\r\n          <div className=\"section-title\">\r\n            <h4>Administrar Productos</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <AdmProductGrid\r\n          columns={columns}\r\n          data={data}\r\n          updateMyData={updateMyData}\r\n          skipPageReset={skipPageReset}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageAdmProducts;\r\n"]},"metadata":{},"sourceType":"module"}